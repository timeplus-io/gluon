# coding: utf-8

"""
    Timeplus

    Welcome to the Timeplus HTTP REST API specification.  # noqa: E501

    OpenAPI spec version: v1
    Contact: support@timeplus.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class KafkaCommonTls(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'disable': 'bool',
        'skip_verify_server': 'bool'
    }

    attribute_map = {
        'disable': 'disable',
        'skip_verify_server': 'skipVerifyServer'
    }

    def __init__(self, disable=None, skip_verify_server=None):  # noqa: E501
        """KafkaCommonTls - a model defined in Swagger"""  # noqa: E501
        self._disable = None
        self._skip_verify_server = None
        self.discriminator = None
        if disable is not None:
            self.disable = disable
        if skip_verify_server is not None:
            self.skip_verify_server = skip_verify_server

    @property
    def disable(self):
        """Gets the disable of this KafkaCommonTls.  # noqa: E501


        :return: The disable of this KafkaCommonTls.  # noqa: E501
        :rtype: bool
        """
        return self._disable

    @disable.setter
    def disable(self, disable):
        """Sets the disable of this KafkaCommonTls.


        :param disable: The disable of this KafkaCommonTls.  # noqa: E501
        :type: bool
        """

        self._disable = disable

    @property
    def skip_verify_server(self):
        """Gets the skip_verify_server of this KafkaCommonTls.  # noqa: E501


        :return: The skip_verify_server of this KafkaCommonTls.  # noqa: E501
        :rtype: bool
        """
        return self._skip_verify_server

    @skip_verify_server.setter
    def skip_verify_server(self, skip_verify_server):
        """Sets the skip_verify_server of this KafkaCommonTls.


        :param skip_verify_server: The skip_verify_server of this KafkaCommonTls.  # noqa: E501
        :type: bool
        """

        self._skip_verify_server = skip_verify_server

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(KafkaCommonTls, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, KafkaCommonTls):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
